/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Administrator;

import Model.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author pavansomashekar
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeeJPanel
     */
    
    private JPanel workJPanel;
    String role;
    UserAccount userAccount = new UserAccount();
    
    public ManageEmployeeJPanel(JPanel workJPanel, String role) {
        initComponents();
        this.workJPanel = workJPanel;
        this.role = role;
        JTableHeader thead = employeeJTable.getTableHeader();
        thead.setForeground(Color.BLUE);
        thead.setFont(thead.getFont().deriveFont(Font.BOLD));
        populateEmployeeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageEmployeeJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        passwordJLabel = new javax.swing.JLabel();
        usernameJLabel = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        usernameJTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();

        manageEmployeeJLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        manageEmployeeJLabel.setText("Manage Employee");

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Role"
            }
        ));
        employeeJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeJTable);

        passwordJLabel.setText("Password");

        usernameJLabel.setText("Username");

        addJButton.setBackground(new java.awt.Color(0, 255, 0));
        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setBackground(new java.awt.Color(255, 0, 0));
        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        updateJButton.setBackground(new java.awt.Color(0, 255, 0));
        updateJButton.setText("Update");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(backJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manageEmployeeJLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameJLabel)
                            .addComponent(passwordJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addJButton)
                        .addGap(32, 32, 32)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(usernameJTextField)
                        .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(manageEmployeeJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameJLabel)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addJButton)
                    .addComponent(updateJButton))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        try{
            ResultSet rs = userAccount.checkIfUsernameIsUnique(usernameJTextField.getText());
            boolean notExists = !rs.isBeforeFirst() && rs.getRow() == 0;

            String username = usernameJTextField.getText();
            String password = jPasswordField.getText();
            String enterprise = "";
            String organisation = "";
            String empRole = "";
            if(username.equals("")){
                JOptionPane.showMessageDialog(this, "Enter a valid username");
            }
            else if(!notExists){
                JOptionPane.showMessageDialog(this, "Enter a unique username");
            }
            else if(password.equals("")){
                JOptionPane.showMessageDialog(this, "Enter a valid password");
            }
            else{
                if(role.equals("BankingAdmin")){
                    enterprise = "Banking";
                    organisation = "BankingOrganisation";
                    empRole = "Banking";
                }
                else if(role.equals("CardAdmin")){
                    enterprise = "Card";
                    organisation = "CardOrganisation";
                    empRole = "Card";
                }
                else if(role.equals("CardVerificationAdmin")){
                    enterprise = "CardVerification";
                    organisation = "CardVerificationOrganisation";
                    empRole = "CardVerification";
                }
                else if(role.equals("LoanAdmin")){
                    enterprise = "Loan";
                    organisation = "LoanOrganisation";
                    empRole = "Loan";
                }
                else if(role.equals("LoanVerificationAdmin")){
                    enterprise = "LoanVerification";
                    organisation = "LoanVerificationOrganisation";
                    empRole = "LoanVerification";
                }
                userAccount.addUserAccount(username, password, empRole);

                JOptionPane.showMessageDialog(this, "Employee added");

                populateEmployeeTable();

                usernameJTextField.setText("");
                jPasswordField.setText("");
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        workJPanel.remove(this);
        CardLayout layout = (CardLayout) workJPanel.getLayout();
        layout.previous(workJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();

        int selectedRowIndex = employeeJTable.getSelectedRow();

        if(selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }

        String username = model.getValueAt(selectedRowIndex, 0).toString();
        userAccount.deleteUserAccount(username);

        JOptionPane.showMessageDialog(this, "Employee deleted");

        populateEmployeeTable();

        usernameJTextField.setText("");
        jPasswordField.setText("");
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        // TODO add your handling code here:
        
            DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();
            int selectedRowIndex = employeeJTable.getSelectedRow();

            if(selectedRowIndex<0) {
                JOptionPane.showMessageDialog(this,"Please select a row to update.");
                return;
            }

            if(usernameJTextField.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Enter the username");
            }
            else if(jPasswordField.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Enter the password");
            }
            else{
                String username = usernameJTextField.getText();
                String password = jPasswordField.getText();
                String enterprise = "";
                String organisation = "";
                String empRole = "";

                if(role.equals("BankingAdmin")){
                    enterprise = "Banking";
                    organisation = "BankingOrganisation";
                    empRole = "Banking";
                }
                else if(role.equals("CardAdmin")){
                    enterprise = "Card";
                    organisation = "CardOrganisation";
                    empRole = "Card";
                }
                else if(role.equals("CardVerificationAdmin")){
                    enterprise = "CardVerification";
                    organisation = "CardVerificationOrganisation";
                    empRole = "CardVerification";
                }
                else if(role.equals("LoanAdmin")){
                    enterprise = "Loan";
                    organisation = "LoanOrganisation";
                    empRole = "Loan";
                }
                else if(role.equals("LoanVerificationAdmin")){
                    enterprise = "LoanVerification";
                    organisation = "LoanVerificationOrganisation";
                    empRole = "LoanVerification";
                }

                String condition = model.getValueAt(selectedRowIndex, 0).toString();

                userAccount.updateUserAccount(condition, usernameJTextField.getText(), jPasswordField.getText(), empRole);

                JOptionPane.showMessageDialog(this,"Employee updated.");

                populateEmployeeTable();

                usernameJTextField.setText("");
                jPasswordField.setText("");
            }
        
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void employeeJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeJTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();
        
        int selectedRowIndex = employeeJTable.getSelectedRow();
        
        usernameJTextField.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_employeeJTableMouseClicked

    private void populateEmployeeTable() {
        DefaultTableModel model = (DefaultTableModel) employeeJTable.getModel();

        model.setRowCount(0);
        
        try{
            ResultSet rs = userAccount.getUserAccounts(role);
            while(rs.next()){
            Object[] rows = new Object[2];
            rows[0]= rs.getString(1);
            rows[1]= rs.getString(3);
            model.addRow(rows);
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageEmployeeJLabel;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JButton updateJButton;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
